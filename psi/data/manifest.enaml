import logging
log = logging.getLogger(__name__)

import datetime as dt
import os

import enaml
from enaml.workbench.api import Extension, PluginManifest, ExtensionPoint
from enaml.workbench.core.api import Command

from psi import get_config
from psi.controller.api import ExperimentAction

from .plugin import DataPlugin
from .sinks.api import PreferencesStore


def set_base_path(event):
    base_path = event.parameters['base_path']
    dt_string = dt.datetime.now().strftime('%Y%m%d-%H%M%S')
    base_path = base_path.format(date_time=dt_string)
    data = event.workbench.get_plugin('psi.data')
    os.makedirs(base_path)
    data.set_base_path(base_path)


def attach_source(event):
    controller = event.workbench.get_plugin('psi.controller')
    obj = event.parameters['obj']
    source_name_attr = event.parameters.get('source_name_attr', 'source_name')
    source_name = getattr(obj, source_name_attr)
    try:
        obj.source = controller.get_input(source_name)
    except:
        obj.set_parent(None)


def format_container(event):
    event.parameters['obj'].format_container()


enamldef DataManifest(PluginManifest): manifest:

    id = 'psi.data'
    factory = DataPlugin

    ExtensionPoint:
        id = 'sinks'

    ExtensionPoint:
        id = 'plots'

    Extension:
        id = manifest.id + 'commands'
        point = 'enaml.workbench.core.commands'
        Command:
            id = manifest.id + '.set_base_path'
            handler = set_base_path
        Command:
            id = manifest.id + '.attach_source'
            handler = attach_source
        Command:
            id = manifest.id + '.format_container'
            handler = format_container

    Extension:
        id = manifest.id + '.sinks'
        point = 'psi.data.sinks'

        PreferencesStore:
            pass
